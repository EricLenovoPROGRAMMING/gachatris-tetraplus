const frenzy2 = new function(REF) {
 this.putMap = function(phase,aA,bB,cC) {
var clr = Math.round(aA * 6)
var mp = Math.round(bB * 2)
var flp = cC / 0.5 > 1 ? true : false
const [I,J,L,O,S,T,Z] = [1,2,3,4,5,6,7]
const [qi,qj,ql,qo,qs,qt,qz] = [0,1,2,3,4,5,6]

if (phase <= 3) {
 switch (clr) {
case 0: {
 switch (mp) {
case 0: {
 let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0,I],
				]
 field2.modifyGrid(20,e,flp)
 preview2.modifyBag([qi],130)
 field2.frenzy.requireLines = 4
 break
}
case 1: {
 let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
]
 field2.modifyGrid(20,e,flp)
 preview2.modifyBag([qi],130)
 field2.frenzy.requireLines = 4
 break
}
case 2: {
 let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,I,I,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I,0,I,I],
]


 field2.modifyGrid(20,e,flp)
 preview2.modifyBag([qi],130)
 field2.frenzy.requireLines = 4
 break
}
 }
 break
}
case 1: {
	switch (mp) {
		case 0: {
			var x = flp == true ? L : J
			let e = [
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,0,x,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,0,x,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql] : [qj],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
			var x = flp == true ? L : J
			let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x],
]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql] : [qj],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var x = flp == true ? L : J
			let e = [
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,0],
			]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql] : [qj],130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break
}
case 2: {
	switch (mp) {
		case 0: {
			var x = flp == true ? L : J
			var y = flp == true ? J : L
			let e = [
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,0,0,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,0,y,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,y,0,0],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql,qj] : [qj,ql],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
			var x = flp == true ? L : J
			var y = flp == true ? J : L
			let e = [
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,y,y,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,y,y,0,x],
			[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,y,y,0,0],
			]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql,qj] : [qj,ql],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var x = flp == true ? L : J
			var y = flp == true ? J : L
			let e = [
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,0,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,0,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,0,0],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,y,y,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,y,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,y,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,y,y,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,y,y,x,x],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,y,y,x,x],
						]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [ql,qj] : [qj,ql],130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break
}
case 3: {
	switch (mp) {
		case 0: {
			var x = flp == true ? S : Z
			let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
]

			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs] : [qz],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
			var x = flp == true ? S : Z
			let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs] : [qz],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var x = flp == true ? S : Z
			let e = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,0,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,0,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,0,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x,x,x,x,x],
]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs] : [qz],130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break
}
case 4: {
	switch (mp) {
		case 0: {
			var a = flp == true ? S : Z
			var b = flp == true ? Z : S

			var e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a]]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs,qz] : [qz,qs],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
var a = flp == true ? S : Z
var b = flp == true ? Z : S
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a]]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs,qz] : [qz,qs],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var a = flp == true ? S : Z
			var b = flp == true ? Z : S
			let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a]]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag(flp == true ? [qs,qz] : [qz,qs],130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break}
case 5: {
	switch (mp) {
		case 0: {
			var a = T
			let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,0,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]

			field2.modifyGrid(20,e,flp)
			preview2.modifyBag([qt],130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
			var a = T
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,0,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
			preview2.modifyBag([qt], 130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var a = T
			let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a]]
			field2.modifyGrid(20,e,flp)
			preview2.modifyBag([qt],130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break
}
case 6: {
	switch (mp) {
		case 0: {
			var a = O
			let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]
			field2.modifyGrid(20, e, flp)
			preview2.modifyBag([qo], 130)
			field2.frenzy.requireLines = 6
			break
		}
		case 1: {
			var a = O
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
			preview2.modifyBag([qo], 130)
			field2.frenzy.requireLines = 6
			break
		}
		case 2: {
			var a = O
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
			preview2.modifyBag([qo], 130)
			field2.frenzy.requireLines = 6
			break
		}
	}
	break
}
/* ------ */
 }
}
if( phase >= 4 && phase < 7){
	switch(clr){
		case 0:{
			switch(mp){
				case 0:{
					var a = I
					let e = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 6
					break
				}
				case 1: {
					var a = I
let e =[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,0,a,a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 7
					break
				}
				case 2: {
					var a = I
let e =[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,a,a,a,a,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,a]]

field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 7
					break
				}
			}
			break
		}
		case 1: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,0,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,a,a,a,0,a,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,a,a,a,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? J : L
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,a,0,a,0,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,a,0,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,a,0,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,0,0,0]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a,0,0,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,a,a,0,a,0,0,a,a,0,0,0,a],[0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,a,0,0,a,a,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
			}
			break
		}
				case 2: {
					switch (mp) {
						case 0: {
							var a = flp == false ? J : L
							var b = flp == false ? L : J
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,a,0,0,0,a,0,0,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,a,0,b,0,a,0,b,0,a,0,b],[0,0,0,0,0,0,0,0,0,0,0,0,0,b,0,0,0,b,0,0,0,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qj,ql] : [ql,qj], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 1: {
							var a = flp == false ? J : L
							var b = flp == false ? L : J
							let e = [[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,0,0,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0,0,b,0,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a,b,b,0,a,0,0],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,0,b,0,0,0,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,0,0,0,a,0,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,0,0,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b]]
							field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 2: {
							var a = flp == false ? J : L
							var b = flp == false ? L : J
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a,0,0,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a,0,b,a,a,0,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a,0,b,a,a,0,b],[0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a,b,b,0,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a,b,b,0,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,0,0,b,b]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
							field2.frenzy.requireLines = 12
							break
						}
					}
					break
				}
				case 3: {
					switch (mp) {
						case 0: {
							var a = flp == false ? Z : S
							let e = [[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz] : [qs], 130)
							field2.frenzy.requireLines = 10
							break
						}
						case 1: {
							var a = flp == false ? Z : S
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,0,0,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a,a]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz] : [qs], 130)
							field2.frenzy.requireLines = 10
							break
						}
						case 2: {
							var a = flp == false ? Z : S
let e = [[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,0,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,0,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,0,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,0,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,0,a,a,a,a,a],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,a,a,a,a,a,a,a,a,0,a]]
							field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz] : [qs], 130)
							field2.frenzy.requireLines = 10
							break
						}
					}
					break
				}
				case 4: {
					switch (mp) {
						case 0: {
							var a = flp == false ? Z : S
							var b = flp == false ? S : Z
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, 0, 0, 0, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b, 0, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz, qs] : [qs, qz], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 1: {
var a = flp == false ? S : Z
							var b = flp == false ? Z : S
let e = [
	[0,0,0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,0,b,a,a,b,b,a,a,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,0,a,b,b,a,a,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,0,0,b,b,0,a,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,0,0,0,0,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,0,b,a,a,b,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,a,a,0,0,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,a,a,0,b,a,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,a,a,b,b,0,a],
[0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,a,a,b,b,0,0]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz, qs] : [qs, qz], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 2: {
							var a = flp == false ? Z : S
							var b = flp == false ? S : Z
let e = [[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,0,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,0,a,b,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,0,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,0,0,0,0,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,0,b,b,0,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,0,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,b,a,a,b,b,a,a,b,b],[0,0,0,0,0,0,0,0,0,0,a,a,0,0,a,a,b,b,a,a,0,b],[0,0,0,0,0,0,0,0,0,0,a,a,b,b,a,a,b,b,a,a,0,0]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == false ? [qz, qs] : [qs, qz], 130)
							field2.frenzy.requireLines = 12
							break
						}
					}
					break
				}
				case 5: {
					switch (mp) {
						case 0: {
							var a = T
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, a, a, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, a, a, a]]				
							field2.modifyGrid(20, e, flp)
							preview2.modifyBag([qt], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 1: {
							var a = T
let e =[
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, 0, 0, 0, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, 0, 0, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, 0, 0, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag([qt], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 2: {
							var a = T
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, 0, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag([qt], 130)
							field2.frenzy.requireLines = 12
							break
						}
					}
					break
				}
				case 6: {
					switch(mp){
						case 0: {
							var a = T
							var b = flp == true ? Z : S
						
							let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, 0, 0, 0, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]							
field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == true ? [qt, qz] : [qt, qs], 130)
							field2.frenzy.requireLines = 12
							break
						}
						case 1: {
							var a = T
							var b = flp == true ? Z : S
						
							let e = [
								[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, b, b, 0, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, 0, a, 0, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b, a, a, 0, 0],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, 0, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, 0, 0, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b]]
							preview2.modifyBag(flp == true ? [qt, qz] : [qt, qs], 130)
							field2.modifyGrid(20, e, flp)
							field2.frenzy.requireLines = 12
							break
						}
						case 2: {
							var b = T
							var a = flp == true ? Z : S
						
							let e = [
								[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, a, a, 0, b, a, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, 0, 0, 0, a, b, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, 0, b, 0, 0, 0, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, 0],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, b],
							[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
							field2.modifyGrid(20, e, flp)
							preview2.modifyBag(flp == true ? [qz, qt] : [qs, qt], 130)
							field2.frenzy.requireLines = 12
							break
						}
					}
					break
				}
		/*--------*/
	}
}
if(phase >= 7 && phase < 10){
	switch(clr){
		case 0: {
			switch(mp){
				case 0: {
					var a = I
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, 0, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 9
					break
				}
				case 1: {
										var a = I
										let e = [
											[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, 0, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a]]
										field2.modifyGrid(20, e, flp)
										preview2.modifyBag([qi], 130)
										field2.frenzy.requireLines = 8
					break
				}
				case 2: {
										var a = I
										let e = [
											[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, a],
										[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a]]
											field2.modifyGrid(20, e, flp)
										preview2.modifyBag([qi], 130)
										field2.frenzy.requireLines = 8
					break
				}
			}
			break
		}
		case 1: {
			switch (mp) {
				case 0: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, a, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 11
					break
				}
			}
			break
		}
		case 2: {
			switch (mp) {
				case 0: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, b, b, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, b, b, a, a, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, 0, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, 0, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs,qz] : [qz,qs], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, 0, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, 0, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, 0, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, a, a, b, b, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, 0, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 12
					break
				}
			}
			break
		}
		case 3: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, 0, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? J : L
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, a, a, a, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 10
					break
				}
			}
			break
		}
		case 4: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, b, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, b, 0, a, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, b, 0, 0, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, b, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, b, b, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, b, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, b, b, b, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, b, b, b, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, b, b, b, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, b, a, a, a, a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj ,qj, ql, ql] : [ql, ql, qj, qj], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, 0, b, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, 0, b, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, 0, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, a, a, a, b, b, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, a, b, b, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, 0, 0, b, b, 0, 0, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, b, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, b, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, a, 0, 0, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, a, b, b, a, a, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, a, a, b, b, a, a, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, a, b, b, a, a, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 13
					break
				}
			}
			break
		}
		case 5: {
			switch (mp) {
				case 0: {
					var b = T
					var a = flp == false ? S : Z
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, b, b, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, b, b, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, b, a, a, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, a, 0, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, b, 0, 0, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, 0, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, b, a, a, b, b, a, a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qs] : [qt, qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = T
					var b = O
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, 0, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt,qo], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
					var b = flp == false ? S : Z
					var c = flp == false ? Z : S
					var d = flp == false ? L : J

					let e = [
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, c, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, d, 0, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, d, c, 0, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, d, d, c, c, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, d, d, c, c, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, d, d, c, c, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, d, d, c, c, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, d, d, c, c, 0, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, d, d, c, c, 0, 0, 0, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, d, d, c, c, 0, 0, 0, 0]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qj, ql, qz] : [qz, ql, qj, qs], 130)
					field2.frenzy.requireLines = 12
					break
				}
			}
			break
		}
		case 6: {
			switch (mp) {
				case 0: {
     var b = T
     var a = flp == false ? S : Z
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, b, a, 0, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, 0, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, b, 0, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, a, 0, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, 0, a, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, b, a, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, b, b, a, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, b, b, a, a, a, a, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qt, qt, qs] : [qz, qt, qt, qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var b = T
					var a = flp == false ? J : L
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, 0, 0, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, 0, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, 0, b, a, a, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qj] : [qt, ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var b = T
					var a = flp == false ? Z : S
					var c = flp == false ? S : Z
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, 0, 0, 0, 0, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, c, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, c, c, b, b, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, c, c, c, c, b, b, a, a]]
					field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qt, qz, qz, qt, qs] : [qz, qt, qs, qs, qt, qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
			}
			break
		}
		/**/
	}
}
if(phase >= 10 && phase < 13){
	switch(clr){
		case 0: {
			switch(mp){
				case 0: {
					var a = I
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, 0, 0, 0, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 9
					break
				}
				case 1: {
					var a = I
					let e = [
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, 0, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 8
					break
				}
				case 2: {
					var a = I
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 9
					break
				}
			}
			break
		}
		case 1: {
			switch (mp) {
				case 0: {
					var a = flp == false ? S : Z
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, a, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, 0, a, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, a, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 11
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 11
					break
				}
			}
			break
		}
		case 2: {
			switch (mp) {
				case 0: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
let e =			[
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, 0, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, b, b, a, 0, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, a, b, b, 0, 0, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, b, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, 0, 0, a, a, b, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, b, 0, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, 0, a, a, b, b, a, a, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, a, a, b, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, b, a, a, b, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, 0, 0, a, a, b, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, b, a, a, b, b, a, a, a, 0, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, a, a, b, b, 0, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, a, a, 0, 0, a, 0, 0, b, 0],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, a, 0, 0, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, 0, 0, b, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, 0, a, b, b, a, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, b, a, a, b, b, a, a, a, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 14
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, b, a, a, a, 0, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, 0, 0, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, a, a, a, b, 0, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, a, a, b, b, a, a, a, b, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, 0, 0, a, b, b, a, a, b, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, 0, 0, b, b, a, a, 0, 0, b],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, a, a, b, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, a, a, a, b, b, a, 0, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, b, b, 0, 0, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, b, 0, a, a, a, b, b, 0, a, b, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		case 3: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, 0, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, 0, 0, a, a, a, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, a, a, a, a, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, 0, a, a, 0, a, 0, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, 0, a, a, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 14
					break
				}
				case 2: {
					var a = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, 0, a, a, 0, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, 0, 0, 0, 0, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, a, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, 0, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 13
					break
				}
			}
			break
		}
		case 4: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
let e = [
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, a, b, b, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, 0, 0, b, b, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, 0, b, b, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, b, b, a, 0, b, b, a, a, 0, b, b],
[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, b, b, a, a, b, b, 0, 0, 0, b, b],
[0, 0, 0, 0, 0, 0, a, 0, a, a, 0, 0, 0, a, a, b, b, a, a, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, 0, a, a, b, 0, a, a, b, b, 0],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, a, b, 0, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, a, 0, 0, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, a, a, b, b, a, a, b, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 14
					break
				}
				case 1: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, b, b, 0, 0, b, b, 0, 0, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, 0, a, 0, b, 0, a, 0, b, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, b, 0, a, 0, b, 0, a, 0, b, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, a, a, 0, 0, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, b, b, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, b, b, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, b, b, b, b, b, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, b, b, b, b, b, a, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, b, b, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, b, b, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, 0, 0, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, 0, b, b, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, b, b, b, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, b, b, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, qj, ql, ql] : [ql, ql, qj, qj], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		case 5: {
			switch (mp) {
				case 0: {
					var a = T
let e = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, 0, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, 0, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 1: {
					var a = T
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, 0, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, a, a, 0, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt], 130)
					field2.frenzy.requireLines = 14
					break
				}
				case 2: {
					var a = T
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, 0, a, 0, a, 0, a, 0, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, a, a, a, 0, a, 0, a, 0, a, 0, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		case 6: {
			switch (mp) {
				case 0: {
					var a = T
					var b = flp == false ? S : Z
let e = [
[0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, b, 0, 0, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, a, b, 0, 0, a, b, 0],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, 0, a, 0, b, 0, a, 0, b],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, b, b, a, a, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qs] : [qt, qz], 130)
					field2.frenzy.requireLines = 14
					break
				}
				case 1: {
										var a = T
										var b = flp == false ? J : L
										let e = [
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, 0, 0, a, a, 0, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, a, b, 0, 0, a, b, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, 0, b, 0, 0, 0, b, 0],
										[0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, 0, a, b, b, 0, a, b, b],
										[0, 0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, b, b, a, a, b, b],
										[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, b, b, 0, a, a, b, b, a, a, b, b],
										[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, a, a, b, b, a, a, b, b],
										[0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, a, a, b, b, a, a, b, b]]
											field2.modifyGrid(20, e, flp)
										preview2.modifyBag(flp == false ? [qt, qj] : [qt, ql], 130)
										field2.frenzy.requireLines = 14
					break
				}
				case 2: {
										var a = T
										var b = flp == false ? J : L
										var c = flp == false ? S : Z
										let e = [
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, c, 0, a, a, 0, 0, c, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, 0, a, a, b, 0, 0, 0],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, c, a, a, b, 0, 0, c],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, c, c, a, a, b, b, c, c],
										[0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, c, c, 0, a, b, b, c, c],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, c, c, 0, 0, b, b, c, c],
										[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, b, b, 0, c, c, 0, a, b, b, c, c],
										[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, c, c, a, a, b, b, c, c],
										[0, 0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, c, c, a, a, b, b, c, c],
										[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, c, c, a, a, b, b, c, c]]
											field2.modifyGrid(20, e, flp)
										preview2.modifyBag(flp == false ? [qt, qj, qs] : [qt, ql, qz], 130)
										field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		/**/
	}
}
if(phase >= 13){
	switch(clr){
		case 0: {
			switch(mp){
				case 0: {
					var a = I
let e = [
	[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, 0, 0, 0, 0, 0, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, a, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a, a, a, 0, a, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, 0, a, a, a, a, a, 0, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, 0, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, a, 0, a, 0, 0, a, a, a, 0, a, a, 0, a, 0, 0],
[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, a, a, a, 0, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = I
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, 0, 0, 0, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, 0, a, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, 0, a, 0, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 11
					break
				}
				case 2: {
					var a = I
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, a, 0, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, 0, a, a, 0, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, a, 0, 0, a, 0, a, a, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qi], 130)
					field2.frenzy.requireLines = 13
					break
				}
			}
			break
		}
		case 1: {
			switch (mp) {
				case 0: {
					var a = flp == false ? J : L
let e = [
	[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, 0, a, a, a, 0, 0, 0, a, a, a, a, a, 0],
[0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, 0],
[0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, 0, a, a, a, a, a, 0, a, a, a],
[0, 0, 0, 0, 0, a, 0, a, a, a, a, a, a, a, a, a, 0, 0, 0, a, a, a],
[0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, a, a, 0, 0, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, 0, 0, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, 0, 0, 0, 0, a, a, 0, a, a, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, a, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 12
					break
				}
				case 2: {
					var a = flp == false ? J : L
					let e = [
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, 0, a, a, a, a, a, a],
					[0, 0, 0, 0, a, 0, 0, a, a, a, a, a, 0, 0, 0, 0, a, a, 0, a, a, a],
					[0, 0, 0, 0, a, a, 0, a, a, 0, 0, 0, 0, a, a, a, 0, 0, 0, a, a, 0],
					[0, 0, 0, 0, a, a, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, 0],
					[0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj] : [ql], 130)
					field2.frenzy.requireLines = 15
					break
				}
			}
			break
		}
		case 2: {
			switch (mp) {
				case 0: {
					var b = flp == false ? J : L
					var a = flp == false ? L : J
let e = [
	[0, 0, 0, 0, 0, a, a, b, b, b, a, a, a, b, b, b, a, a, a, b, b, b],
[0, 0, 0, 0, 0, a, 0, b, b, b, a, a, a, b, b, b, 0, 0, 0, b, b, b],
[0, 0, 0, 0, 0, 0, 0, b, b, b, 0, 0, 0, b, b, b, a, a, 0, b, b, b],
[0, 0, 0, 0, 0, 0, 0, b, b, b, a, a, 0, b, b, b, a, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, b, b, b, a, a, a, b, b, b, a, a, a, b, b, b],
[0, 0, 0, 0, 0, 0, 0, b, b, b, a, a, a, b, b, b, a, a, a, b, b, 0],
[0, 0, 0, 0, b, 0, 0, b, b, b, a, a, a, b, b, 0, a, a, a, 0, 0, 0],
[0, 0, 0, 0, b, b, 0, b, b, 0, a, a, a, 0, 0, 0, a, a, a, b, b, b],
[0, 0, 0, 0, b, b, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b],
[0, 0, 0, 0, b, b, b, b, b, b, a, a, a, b, b, b, a, a, a, b, b, b]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = flp == false ? J : L
					var b = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, 0, b, b, b, a, a, a, b, b, b, a, a, 0],
					[0, 0, 0, 0, 0, a, 0, 0, 0, 0, b, b, b, a, a, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, b, 0, a, a, a, 0, 0, 0, 0, 0, 0, b, b, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, 0, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 2: {
					var b = flp == false ? J : L
					var a = flp == false ? L : J
					let e = [
						[0, 0, 0, 0, 0, a, a, b, b, a, a, b, b, a, a, b, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, a, 0, b, b, 0, 0, 0, b, a, a, b, b, 0, 0, 0, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, b, a, a, 0, b, 0, 0, 0, b, a, a, 0, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, 0, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, b, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, b, a, a, b, b, a, a, b, b, a, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, b, b, 0, a, b, b, a, a, b, b, 0, a, b, b, b],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, 0, a, 0, 0, 0, a, b, b, 0],
					[0, 0, 0, 0, 0, b, 0, b, b, a, a, 0, 0, 0, a, b, b, a, a, 0, 0, 0],
					[0, 0, 0, 0, 0, b, b, b, b, a, a, b, b, a, a, b, b, a, a, b, b, b]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qj, ql] : [ql, qj], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		case 3: {
			switch (mp) {
				case 0: {
					var a = flp == false ? S : Z
let e = [
	[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, 0, a],
[0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a, a, a, 0, 0],
[0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, a, a, a, a, 0, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, 0, 0, a, a, a],
[0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, 0, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, a, 0, 0, 0, a, a, a, a, a, a, a, 0, 0, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, a, 0, a, a, a, 0, 0, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, 0, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, a, 0, a, a, a, 0, 0, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, 0, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, 0, 0, a, a, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, 0, 0, a, a, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, 0, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs] : [qz], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		case 4: {
			switch (mp) {
				case 0: {
										var a = flp == false ? S : Z
										var b = flp == false ? Z : S
let e = [
	[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, b, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, 0, 0, 0, 0, a, b, 0, 0, 0, 0, a],
[0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, b, a, 0, 0, 0, 0, b, a, 0, 0],
[0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
field2.modifyGrid(20, e, flp)
										preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
										field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, b, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, 0, 0, a, a, a, b, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, 0, b, a, a, a, 0, 0, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, b, b, b, 0, 0, a, b, b, b, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, b, b, a, 0, 0, b, b, b, a, 0, 0],
					[0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 2: {
					var a = flp == false ? S : Z
					var b = flp == false ? Z : S
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, 0, 0],
					[0, 0, 0, 0, 0, 0, b, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, 0, 0, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, 0, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, b, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, 0, 0, a, b, 0, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, 0, 0, 0, 0, b, a, a, a],
					[0, 0, 0, 0, 0, 0, a, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qs, qz] : [qz, qs], 130)
					field2.frenzy.requireLines = 15
					break
				}
			}
			break
		}
		case 5: {
			switch (mp) {
				case 0: {
							var a = T
let e = [
	[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, 0, a, a, a, a, a, 0, a],
[0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, 0, a, a, a, a, a, 0, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
field2.modifyGrid(20, e, flp)
							preview2.modifyBag([qt], 130)
							field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = T
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, 0, 0, a, 0, 0, 0, a, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, 0, a, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, 0, a, a, a, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, 0, 0, 0, a, 0, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt], 130)
					field2.frenzy.requireLines = 13
					break
				}
				case 2: {
					var a = T
					let e = [
						[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, 0, a, a, 0, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, 0, a, a, a, a, a, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, a, a, 0, 0, a, 0, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, 0, a, a, a, a, a, 0, a, a, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, a, a, a, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag([qt], 130)
					field2.frenzy.requireLines = 12
					break
				}
			}
			break
		}
		case 6: {
			switch (mp) {
				case 0: {
					var a = T
					var b = flp == false ? S : Z
let e = [
	[0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, b, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, a, 0, a, b, 0, 0, a, 0, a, b, 0, 0, a, 0, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qs] : [qt, qz], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 1: {
					var a = T
					var b = flp == false ? J : L
					let e = [
						[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, a, a, b, b, 0, a, a, a, b, b, 0, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, a, 0, a, 0, 0, 0, a, 0, a, 0, 0, 0, a, 0, a],
					[0, 0, 0, 0, 0, a, 0, 0, 0, 0, b, b, b, 0, 0, 0, b, b, b, 0, 0, 0],
					[0, 0, 0, 0, 0, a, a, a, a, a, b, b, b, a, a, a, b, b, b, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qj] : [qt, ql], 130)
					field2.frenzy.requireLines = 15
					break
				}
				case 2: {
					var a = T
					var b = flp == false ? S : Z
					let e = [
						[0, 0, 0, 0, 0, 0, a, a, b, b, a, a, a, a, a, b, b, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, a, a, 0, a, 0, 0, 0, a, a, 0, a],
					[0, 0, 0, 0, 0, 0, 0, 0, b, 0, 0, 0, a, 0, 0, b, 0, 0, 0, a, 0, 0],
					[0, 0, 0, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, a, a, b, 0, 0, 0, 0, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a, a, a, a, a, 0, 0, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, 0, b, a, a, a, a, a, 0, b, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, a, a, b, b, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, a, a, b, b, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, a, a, b, b, a, a, a, a, a],
					[0, 0, 0, 0, 0, 0, 0, 0, b, b, a, a, a, a, a, b, b, a, a, a, a, a]]
						field2.modifyGrid(20, e, flp)
					preview2.modifyBag(flp == false ? [qt, qt, qt, qs] : [qt, qt, qt, qz], 130)
					field2.frenzy.requireLines = 14
					break
				}
			}
			break
		}
		/**/
	}
}
 __gtrisAIFrenzyEvaluator(phase, clr, mp, flp)
 }
 
 
}()
